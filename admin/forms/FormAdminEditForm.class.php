<?php
/**
 * @package user
 * @version $Id: UserAdminEditForm.class.php,v 1.2 2007/06/07 05:27:37 minahito Exp $
 */

if (!defined('XOOPS_ROOT_PATH')) exit();

require_once XOOPS_ROOT_PATH . "/core/XCube_ActionForm.class.php";
require_once XOOPS_MODULE_PATH.'/legacy/class/Legacy_Validator.class.php';
/***
 * @internal
 * This class is generated by makeActionForm tool.
 * 
 * @todo We may have to check the format of URL.
 */
class ContactFormAdminEditForm extends XCube_ActionForm
{
	var $_mIsNew;

	// --------------------------------------------------------
	// 繧ｳ繝ｳ繧ｹ繝医Λ繧ｯ繧ｿ
	// --------------------------------------------------------
	function ContactFormAdminEditForm()
	{
		parent::XCube_ActionForm();
	}
	
	// --------------------------------------------------------
	// 繝医・繧ｯ繝ｳ蜷阪・亥・蜉帙・繝√こ繝・ヨ・・	// --------------------------------------------------------
	function getTokenName()
	{
		return "module.contact.ContactFormAdminEditForm.Token";
	}
	
	// --------------------------------------------------------
	// prepare縲繝｡繧ｽ繝・ラ
	// method・医Γ繧ｽ繝・ラ・画婿豕輔・諢丞袖
	// 繝・・繧ｿ蝙九・逋ｻ骭ｲ縺ｨ蜈･蜉帙メ繧ｧ繝・け
	// --------------------------------------------------------
	function prepare()
	{
		//
		// 繝輔か繝ｼ繝縺ｫ繝励Ο繝代ユ繧｣繧偵そ繝・ヨ
		// Set form properties
		//
		// $this->mFormProperties['繧ｨ繝ｬ繝｡繝ｳ繝亥錐'] = new 蝙九↓蜷医ｏ縺帙◆繧ｯ繝ｩ繧ｹ蜷・'繧ｨ繝ｬ繝｡繝ｳ繝亥錐');
		$this->mFormProperties['form_id']        = new XCube_IntProperty('form_id');
		$this->mFormProperties['form_type']      = new XCube_IntProperty('form_type');
		$this->mFormProperties['form_title']     = new XCube_StringProperty('form_title');
		$this->mFormProperties['form_slug']      = new XCube_StringProperty('form_slug');
		$this->mFormProperties['form_header']    = new XCube_TextProperty('form_header');
		$this->mFormProperties['form_footer']    = new XCube_TextProperty('form_footer');
		$this->mFormProperties['form_weight']    = new XCube_IntProperty('form_weight');
		$this->mFormProperties['form_sender']    = new XCube_StringProperty('form_sender');
		$this->mFormProperties['form_useadmin']  = new XCube_BoolProperty('form_useadmin');
		$this->mFormProperties['form_needreply'] = new XCube_BoolProperty('form_needreply');
		$this->mFormProperties['form_recordlog'] = new XCube_BoolProperty('form_recordlog');
		$this->mFormProperties['form_publised']  = new XCube_BoolProperty('form_publised');

		// --------------------------------------------------------
		// 蜈･蜉帙・讀懈渊
		// $this->mFieldProperties['繧ｨ繝ｬ繝｡繝ｳ繝亥錐'] = new XCube_FieldProperty($this);
		// $this->mFieldProperties['繧ｨ繝ｬ繝｡繝ｳ繝亥錐']->setDependsByArray(array('蜈･蜉帶､懈渊縺ｮ繧ｿ繧､繝・));
		// 蜈･蜉帶､懈渊縺ｮ繧ｿ繧､繝・		//     required    : 蜈･蜉帛ｿ・・		//     minlength   : 譛蟆乗枚蟄怜・
		//     maxlength   : 譛螟ｧ譁・ｭ怜・
		//     min         : 譛蟆丞､・域焚蛟､・・		//     max         : 譛螟ｧ蛟､・域焚蛟､・・		//     intRange    : 謨ｰ蛟､縺ｮ遽・峇
		//     email       : 繝｡繝ｼ繝ｫ繧｢繝峨Ξ繧ｹ
		//     mask        : 豁｣隕剰｡ｨ迴ｾ
		//     extension   : 諡｡蠑ｵ蟄・		//     maxfilesize : 繝輔ぃ繧､繝ｫ繧ｵ繧､繧ｺ  'jpg,png.gif'
		// --------------------------------------------------------
/*
		$this->mFieldProperties['form_id'] = new XCube_FieldProperty($this);
		$this->mFieldProperties['form_id']->setDependsByArray(array('required'));
		$this->mFieldProperties['form_id']->addMessage('required', _AD_GLOSSARY_ERROR_REQUIRED, _AD_GLOSSARY_LANG_UID);

		$this->mFieldProperties['form_type'] = new XCube_FieldProperty($this);
		$this->mFieldProperties['form_type']->setDependsByArray(array('maxlength'));
		$this->mFieldProperties['form_type']->addMessage('maxlength', _AD_GLOSSARY_ERROR_MAXLENGTH, _AD_GLOSSARY_LANG_NAME, '2');
		$this->mFieldProperties['form_type']->addVar('maxlength', 2);

		$this->mFieldProperties['form_title'] = new XCube_FieldProperty($this);
		$this->mFieldProperties['form_title']->setDependsByArray(array('required','maxlength'));
		$this->mFieldProperties['form_title']->addMessage('required', _AD_GLOSSARY_ERROR_REQUIRED, _AD_GLOSSARY_LANG_UNAME, '255');
		$this->mFieldProperties['form_title']->addMessage('maxlength', _AD_GLOSSARY_ERROR_MAXLENGTH, _AD_GLOSSARY_LANG_UNAME, '255');
		$this->mFieldProperties['form_title']->addVar('maxlength', 255);

		$this->mFieldProperties['form_slug'] = new XCube_FieldProperty($this);
		$this->mFieldProperties['form_slug']->setDependsByArray(array('required','maxlength'));
		$this->mFieldProperties['form_slug']->addMessage('required', _AD_GLOSSARY_ERROR_REQUIRED, _AD_GLOSSARY_LANG_UNAME, '255');
		$this->mFieldProperties['form_slug']->addMessage('maxlength', _AD_GLOSSARY_ERROR_MAXLENGTH, _AD_GLOSSARY_LANG_UNAME, '255');
		$this->mFieldProperties['form_slug']->addVar('maxlength', 255);
*/


	}


	// --------------------------------------------------------
	// 繧ｪ繝ｪ繧ｸ繝翫Ν縺ｮ蜈･蜉帶､懈渊
	//  prepare繝｡繧ｽ繝・ラ縺ｫ霑ｽ蜉縺吶ｋ鬆・岼縺後≠繧後・縲∬ｿｽ蜉縺悟庄閭ｽ
	// validate+繧ｨ繝ｬ繝｡繝ｳ繝亥錐・磯ｭ譁・ｭ怜､ｧ譁・ｭ暦ｼ・	// --------------------------------------------------------

	function validateUname()
	{
		if ($this->get('uname') != null) {
			$handler =& xoops_gethandler('user');
			$criteria = new CriteriaCompo(new Criteria('uname', $this->get('uname')));
			if ($this->get('uid')) {
				$criteria->add(new Criteria('uid', $this->get('uid'), '<>'));
			}
			if ($handler->getCount($criteria) > 0) {
				$this->addErrorMessage(_AD_GLOSSARY_ERROR_UNAME_NO_UNIQUE);
			}
		}
	}

	
	// --------------------------------------------------------
	// Object Load
	// --------------------------------------------------------
//	function load()
	function load(&$obj)
	{
//		$root =& XCube_Root::getSingleton();


echo  "**** ".$obj->get('form_id')."<br />";

		$this->set('form_id'       , $obj->get('form_id'));
		$this->set('form_type'     , $obj->get('form_type'));
		$this->set('form_title'    , $obj->get('form_title'));
		$this->set('form_slug'     , $obj->get('form_slug'));
		$this->set('form_header'   , $obj->get('form_header'));
		$this->set('form_footer'   , $obj->get('form_footer'));
		$this->set('form_weight'   , $obj->get('form_weight'));
		$this->set('form_sender'   , $obj->get('form_sender'));
		$this->set('form_useadmin' , $obj->get('form_useadmin'));
		$this->set('form_needreply', $obj->get('form_needreply'));
		$this->set('form_recordlog', $obj->get('form_recordlog'));
		$this->set('form_publised' , $obj->get('form_publised'));

//		$this->_mIsNew = $obj->isNew();



	}


	// --------------------------------------------------------
	// Object Update
	// --------------------------------------------------------
	function update(&$obj)
	{
		$root =& XCube_Root::getSingleton();

		$obj->set('form_id'       , $this->get('form_id'));
		$obj->set('form_type'     , $this->get('form_type'));
		$obj->set('form_title'    , $this->get('form_title'));
		$obj->set('form_slug'     , $this->get('form_slug'));
		$obj->set('form_header'   , $this->get('form_header'));
		$obj->set('form_footer'   , $this->get('form_footer'));
		$obj->set('form_weight'   , $this->get('form_weight'));
		$obj->set('form_sender'   , $this->get('form_sender'));
		$obj->set('form_useadmin' , $this->get('form_useadmin'));
		$obj->set('form_needreply', $this->get('form_needreply'));
		$obj->set('form_recordlog', $this->get('form_recordlog'));
		$obj->set('form_publised' , $this->get('form_publised'));

	}
}

?>
